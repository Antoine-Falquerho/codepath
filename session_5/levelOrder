# Definition for a  binary tree node
class TreeNode
    attr_accessor :left,:right,:data
    def initialize(data)
        @data = data
        @left = nil
        @right = nil
    end
end
class Solution
    # @param a : root node of tree
    # @return an array of array of integers
    def levelOrder(a)
        return [] if a.nil?
        levels = []
        queue = []
        queue << a
        while !queue.empty? do
            size = queue.size
            i = 0
            level = []
            while i < size do
                node = queue.delete_at(0)
                level << node.data
                queue << node.left if node.left
                queue << node.right if node.right
                i += 1
            end
            levels << level
        end
        return levels
    end
end

a= TreeNode.new(3)
b= TreeNode.new(9)
c= TreeNode.new(20)
d= TreeNode.new(15)
e= TreeNode.new(7)
a.left = b
a.right = c
b.left = d
b.right = e


p Solution.new.levelOrder(a)


  #   3
  #  / \
  # 9  20
  #   /  \
  #  15   7

# [
#   [3],
#   [9,20],
#   [15,7]
# ]